openapi: 3.0.0
info:
  description: "API para gestionar paramédicos, conductores, asistentes, pacientes, etc."
  version: "1.0.0"
  title: "API de Gestión de Salud"
server:
  - url: "http://localhost:3005/api"
    description: "Servidor de desarrollo"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []

tags:
  - name: "auth"
    description: "Operaciones de autenticación y autorización"
  - name: "paramedics"
    description: "Operaciones de paramédicos"
  - name: "assistants"
    description: "Operaciones de asistentes"
  - name: "ambulance"
    description: "Operaciones de ambulancias"
  - name: "Drivers"
    description: "Operaciones de conductores"
  - name: "IPS"
    description: "Operaciones de ips"
  - name: "Shifts"
    description: "Operaciones de turnos"
  - name: "Services"
    description: "Operaciones de Servicio"
  - name: "Descriptions"
    description: "Operaciones de Descripciones"
  - name: "Patients"
    description: "Operaciones de Pacientes"
  - name: "user"
    description: "Operaciones del usuario"
 
  - name: "Patient"
    description: "Operaciones de pacientes"

paths:
  /api/auth/login:
    post:
      tags:
        - auth
      summary: Iniciar sesión / Login
      description: Autentica a un usuario con su documento y contraseña y devuelve un token JWT.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - document
                - password
              properties:
                document:
                  type: string
                  example: "1234123412"
                password:
                  type: string
                  example: "a123456789"
      responses:
        200:
          description: "Inicio de sesión exitoso"
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        401:
          description: "Credenciales inválidas"
        500:
          description: "Error interno del servidor"

  /api/admin/paramedic:
    post:
      tags:
        - paramedics
      summary: Crear un nuevo paramédico
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParamedicInput"
      responses:
        "201":
          description: Paramedic created successfully
        "400":
          description: Validation error
        "403":
          description: Access Denied
        "500":
          description: Internal server error
  /api/admin/paramedic:
    get:
      tags:
        - paramedics
      summary: Obtener todos los paramédicos
      responses:
        "200":
          description: Lista de paramédicos
        "403":
          description: Access Denied
        "500":
          description: Internal server error

  /admin/paramedic/{id}:
    get:
      tags:
        - paramedics
      summary: Obtener paramédico por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Información del paramédico
        "403":
          description: Access Denied
        "500":
          description: Internal server error
    put:
      tags:
        - paramedics
      summary: Modificar paramédico
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParamedicInput"
      responses:
        "200":
          description: Paramedic updated successfully
        "403":
          description: Access Denied
        "500":
          description: Internal server error
    delete:
      tags:
        - paramedics
      summary: Eliminar paramédico
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Paramedic deleted
        "403":
          description: Access Denied
        "500":
          description: Internal server error

  /api/admin/assistant/add:
    post:
      tags:
        - assistants
      summary: Crear un nuevo asistente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssistantInput"
      responses:
        "201":
          description: Assistant created successfully
        "400":
          description: Validation error
        "403":
          description: Access Denied
        "500":
          description: Internal server error

  /api/admin/assistant:
    get:
      tags:
        - assistants
      summary: Obtener todos los asistentes
      responses:
        "200":
          description: Lista de asistentes
        "403":
          description: Access Denied
        "500":
          description: Internal server error

  /api/admin/assistants/{id}:
    get:
      tags:
        - assistants
      summary: Obtener asistente por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Información del asistente
        "403":
          description: Access Denied
        "500":
          description: Internal server error
    put:
      tags:
        - assistants
      summary: Modificar asistente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssistantInput"
      responses:
        "200":
          description: Assistant updated successfully
        "403":
          description: Access Denied
        "500":
          description: Internal server error
    delete:
      tags:
        - assistants
      summary: Eliminar asistente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Assistant deleted
        "403":
          description: Access Denied
        "500":
          description: Internal server error

  /api/admin/ambulance/add:
    post:
      tags:
        - Ambulances
      summary: Create a new ambulance
      description: Crea una nueva ambulancia. Solo accesible por usuarios con rol ADMIN.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                modelo:
                  type: string
                  example: "Toyota Hiace"
                placa:
                  type: string
                  example: "ABC-123"
                tipo:
                  type: string
                  example: "UCI"
                ipsId:
                  type: integer
                  example: 1
      responses:
        '201':
          description: Ambulancia creada exitosamente.
        '400':
          description: Error de validación.
        '403':
          description: Acceso denegado.
        '500':
          description: Error interno del servidor.

  /api/admin/ambulance:
    get:
      tags:
        - Ambulances
      summary: Get all ambulances
      description: Retorna todas las ambulancias registradas. Solo accesible por ADMIN.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de ambulancias.
        '403':
          description: Acceso denegado.
        '500':
          description: Error interno del servidor.

  api/admin/ambulance/{id}:
    get:
      tags:
        - Ambulances
      summary: Get ambulance by ID
      description: Obtiene una ambulancia específica por su ID. Solo accesible por ADMIN.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Ambulancia encontrada.
        '403':
          description: Acceso denegado.
        '500':
          description: Error interno del servidor.

    delete:
      tags:
        - Ambulances
      summary: Delete ambulance by ID
      description: Elimina una ambulancia por su ID. Solo accesible por ADMIN.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Ambulancia eliminada exitosamente.
        '403':
          description: Acceso denegado.
        '500':
          description: Error interno del servidor.

    put:
      tags:
        - Ambulances
      summary: Update ambulance by ID
      description: Modifica los datos de una ambulancia. Solo accesible por ADMIN.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                modelo:
                  type: string
                  example: "Mercedes Sprinter"
                placa:
                  type: string
                  example: "XYZ-789"
                tipo:
                  type: string
                  example: "Básica"
                ipsId:
                  type: integer
                  example: 2
      responses:
        '200':
          description: Ambulancia actualizada correctamente.
        '400':
          description: Error de validación.
        '403':
          description: Acceso denegado.
        '500':
          description: Error interno del servidor.
  /api/admin/driver/add:
    post:
      tags:
        - Drivers
      summary: Crear un nuevo conductor
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                last_name:
                  type: string
                document:
                  type: string
                no_licencia:
                  type: string
                no_fast_driver:
                  type: string
              required:
                - name
                - last_name
                - document
                - no_licencia
                - no_fast_driver
      responses:
        '201':
          description: Conductor creado exitosamente
        '400':
          description: Datos inválidos
        '403':
          description: Acceso denegado
        '500':
          description: Error del servidor
  
  /api/admin/driver:
    get:
      tags:
        - Drivers
      summary: Obtener todos los conductores
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de conductores
        '403':
          description: Acceso denegado
        '500':
          description: Error del servidor

  /api/admin/driver/{id}:
    get:
      tags:
        - Drivers
      summary: Obtener un conductor por ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Datos del conductor
        '403':
          description: Acceso denegado
        '500':
          description: Error del servidor

    delete:
      tags:
        - Drivers
      summary: Eliminar un conductor por ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Conductor eliminado correctamente
        '403':
          description: Acceso denegado
        '500':
          description: Error del servidor

    put:
      tags:
        - Drivers
      summary: Modificar un conductor por ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                last_name:
                  type: string
                document:
                  type: string
                no_licencia:
                  type: string
                no_fast_driver:
                  type: string
              required:
                - name
                - last_name
                - document
                - no_licencia
                - no_fast_driver
      responses:
        '200':
          description: Conductor actualizado correctamente
        '403':
          description: Acceso denegado
        '500':
          description: Error del servidor

  /api/admin/ips/add:
    post:
      tags:
        - IPS
      summary: Crear una nueva IPS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpsInput'
      responses:
        '201':
          description: IPS creada exitosamente
        '500':
          description: Error del servidor

  /api/admin/ips:
    get:
      tags:
        - IPS
      summary: Obtener todas las IPS registradas
      responses:
        '200':
          description: Lista de IPS
        '500':
          description: Error del servidor

  /api/admin/ips/{id}:
    get:
      tags:
        - IPS
      summary: Obtener una IPS por su ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Datos de la IPS
        '404':
          description: IPS no encontrada
        '500':
          description: Error del servidor

    delete:
      tags:
        - IPS
      summary: Eliminar una IPS por su ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: IPS eliminada exitosamente
        '500':
          description: Error del servidor

    put:
      tags:
        - IPS
      summary: Actualizar una IPS por su ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpsInput'
      responses:
        '200':
          description: IPS actualizada exitosamente
        '500':
          description: Error del servidor

  /api/admin/shift/add:
    post:
      tags:
        - Shifts
      summary: Crear un nuevo turno
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftInput'
      responses:
        '201':
          description: Turno creado exitosamente
        '400':
          description: Datos inválidos
        '403':
          description: Acceso denegado
        '500':
          description: Error del servidor
  /api/admin/ahift:
    get:
      tags:
        - Shifts
      summary: Obtener todos los turnos
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de turnos
        '403':
          description: Acceso denegado
        '500':
          description: Error del servidor

  /api/admin/shift/{id}:
    get:
      tags:
        - Shifts
      summary: Obtener un turno por ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Turno encontrado
        '403':
          description: Acceso denegado
        '404':
          description: Turno no encontrado
        '500':
          description: Error del servidor

    delete:
      tags:
        - Shifts
      summary: Eliminar un turno por ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Turno eliminado exitosamente
        '403':
          description: Acceso denegado
        '404':
          description: Turno no encontrado
        '500':
          description: Error del servidor

    put:
      tags:
        - Shifts
      summary: Modificar un turno por ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftInput'
      responses:
        '200':
          description: Turno actualizado exitosamente
        '403':
          description: Acceso denegado
        '500':
          description: Error del servidor

  /api/user/attention/add:
    post:
      tags:
        - Services
      summary: Crear un nuevo servicio de atención
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceInput'
      responses:
        '201':
          description: Servicio creado exitosamente
        '400':
          description: Error de validación
        '500':
          description: Error del servidor

  /api/user/attention:
    get:
      tags:
        - Services
      summary: Obtener todos los servicios de atención
      responses:
        '200':
          description: Lista de servicios
        '500':
          description: Error del servidor

  /api/user/attention/{id}:
    get:
      tags:
        - Services
      summary: Obtener un servicio por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Servicio encontrado
        '404':
          description: Servicio no encontrado
        '500':
          description: Error del servidor

    put:
      tags:
        - Services
      summary: Actualizar un servicio por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceInput'
      responses:
        '200':
          description: Servicio actualizado exitosamente
        '500':
          description: Error del servidor

    delete:
      tags:
        - Services
      summary: Eliminar un servicio por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Servicio eliminado exitosamente
        '500':
          description: Error del servidor

  /api/user/description/add:
    post:
      tags:
        - Descriptions
      summary: Crear una nueva descripción de incidente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescriptionInput'
      responses:
        '201':
          description: Descripción creada exitosamente
        '400':
          description: Error de validación
        '500':
          description: Error del servidor
  /api/user/description:
    get:
      tags:
        - Descriptions
      summary: Obtener todas las descripciones
      responses:
        '200':
          description: Lista de descripciones
        '500':
          description: Error del servidor

  /api/user/description/{id}:
    get:
      tags:
        - Descriptions
      summary: Obtener una descripción por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Descripción encontrada
        '404':
          description: Descripción no encontrada
        '500':
          description: Error del servidor

    put:
      tags:
        - Descriptions
      summary: Actualizar una descripción
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
              required:
                - description
      responses:
        '200':
          description: Descripción actualizada
        '500':
          description: Error del servidor

    delete:
      tags:
        - Descriptions
      summary: Eliminar una descripción
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Descripción eliminada
        '500':
          description: Error del servidor

  /api/user/patient/add:
    post:
      tags:
        - Patients
      summary: Crear un nuevo paciente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientInput'
      responses:
        '201':
          description: Paciente creado exitosamente
        '400':
          description: Error de validación o fallo al crear
        '500':
          description: Error del servidor

  /api/user/patient:
    get:
      tags:
        - Patients
      summary: Obtener todos los pacientes
      responses:
        '200':
          description: Lista de pacientes
        '500':
          description: Error del servidor

  /api/user/patient/{id}:
    get:
      tags:
        - Patients
      summary: Obtener paciente por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Paciente encontrado
        '500':
          description: Error del servidor

    put:
      tags:
        - Patients
      summary: Modificar un paciente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientInput'
      responses:
        '200':
          description: Paciente actualizado
        '500':
          description: Error del servidor

    delete:
      tags:
        - Patients
      summary: Eliminar un paciente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Paciente eliminado exitosamente
        '500':
          description: Error del servidor

